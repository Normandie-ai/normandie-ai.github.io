---
import { Image } from "astro:assets";
import fetchApi from "@lib/strapi";
import { getImageUrl, getLinkUrl } from "@lib/imageUtils";

interface NavbarItem {
	title: string;
	url: string;
	target?: string;
}

interface Navigation {
	Logo?: {
		url: string;
		alternativeText: string;
	};
	Right_Navbar_Items?: NavbarItem[];
	Left_Navbar_Items?: NavbarItem[];
}
const strapiUrl = import.meta.env.STRAPI_URL;
const baseUrl = import.meta.env.BASE_URL;

// Fetch navigation data with error handling
let navigationData: Navigation | null = null;
try {
	navigationData = await fetchApi({
		endpoint: "/navigation?populate=*",
		wrappedByKey: "data",
	});
} catch (error) {
	console.warn("Failed to fetch navigation data:", error);
}

// Destructure with fallback values
const Logo = navigationData?.Logo || null;
const Right_Navbar_Items = navigationData?.Right_Navbar_Items || [];
const Left_Navbar_Items = navigationData?.Left_Navbar_Items || [];

const imageUrl = getImageUrl(Logo?.url, strapiUrl);
---

<header class="fixed text-slate-100 body-font z-20 w-full">
   <div class="mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center px-18 py-12">
     <a href={baseUrl} class="flex title-font font-medium items-center mb-4 md:mb-0">
      {Logo && imageUrl ? (
        <Image src={imageUrl}
            alt={Logo.alternativeText || "Logo"}
            width="204"
            height="102"
            loading="eager"
        />
      ) : (
        <div class="w-[204px] h-[102px] bg-white/10 rounded flex items-center justify-center">
          <span class="text-white text-lg font-semibold">Logo</span>
        </div>
      )}
     </a>
     <nav class="md:mr-auto md:ml-4 md:py-1 md:pl-4 flex flex-wrap items-center text-sm justify-center">
        {Right_Navbar_Items?.map((item: NavbarItem) => {
          const href = getLinkUrl(item.url, baseUrl);
          return (<a
            href={href}
            class="mr-5 hover:text-gray-600"
            target={item.target ? item.target : '_self'}
          >
            {item.title}
          </a>)
        })}
     </nav>
     <div class="flex space-x-2 items-center">
      {Left_Navbar_Items?.map((item: NavbarItem) => {
        const href = getLinkUrl(item.url, baseUrl);
        return (
          <a
            href={href}
            target={item.target ? item.target : '_self'}
            class="inline-flex items-center bg-violet-300 text-slate-600 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base mt-4 md:mt-0">
            {item.title}
          </a>
        );
      })}
    </div>
   </div>
 </header>