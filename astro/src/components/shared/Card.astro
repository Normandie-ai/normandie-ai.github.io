---
import { Image } from "astro:assets";
import AvegaTitle from "./AvegaTitle.astro";
import { getImageUrl } from "@lib/imageUtils";
import { cn } from "@lib/cn";
import Button from "./Button.astro";

interface LinkItem {
	title: string;
	url: string;
	target?: "_blank" | "_self" | "_parent" | "_top";
}
interface Props {
	title: string;
	titleLevel?: 1 | 2 | 3 | 4 | 5 | 6;
	titleColor?: string;
	titleClassName?: string;
	subtitle?: string;
	subtitleClassName?: string;
	description: string;
	icon?: {
		url: string;
		alternativeText: string;
	};
	iconSize?: "sm" | "md" | "lg";
	iconClassName?: string;
	backgroundImage?: {
		url: string;
		alternativeText: string;
	};
	className?: string;
	button?: LinkItem;
}

const strapiUrl = import.meta.env.STRAPI_URL;

const { title, subtitle, description, icon, iconSize, iconClassName, backgroundImage, titleLevel = 4, titleColor, titleClassName, className, subtitleClassName, button} = Astro.props;

const iconUrl = getImageUrl(icon?.url, strapiUrl);
const imageUrl = getImageUrl(backgroundImage?.url, strapiUrl);
---

<div class={cn("relative size-full p-8 pb-10 text-center rounded-2xl backdrop-blur-xs bg-[#424242]/10 border border-white shadow-xl hover:shadow-2xl transition-all duration-300 group hover:scale-105 max-w-5xl", className)}
	style={
		backgroundImage && {
		backgroundImage: `url(${imageUrl})`,
		backgroundSize: 'cover',
		backgroundPosition: 'center',
	}}
>
	{iconUrl && (
		<div class="relative flex justify-center">
			<Image 
				src={iconUrl} 
				alt={icon?.alternativeText ?? ""} 
				width={iconSize === "sm" ? 52 : iconSize === "md" ? 64 : 112} 
				height={iconSize === "sm" ? 52 : iconSize === "md" ? 64 : 112} 
				class={cn("size-13", iconSize === "sm" && "size-13", iconSize === "md" && "size-16", iconSize === "lg" && "size-20", iconClassName)}
			/>
		</div>
	)}
	
	<AvegaTitle title={title} level={titleLevel} className={cn("mx-auto", titleClassName)} color={titleColor} />
	
	{subtitle && (
		<p class={cn("relative text-white font-bold text-center text-sm", subtitleClassName)}>
			{subtitle}
		</p>
	)}

	{description && (
		<p class="relative mt-4 text-white/90 leading-relaxed text-center text-sm mx-auto">
			{description}
		</p>
	)}

	{button && (
		<Button url={button.url} target={button.target || "_blank"} text={button.title} variant="outline" className="mt-8" />
	)}
	
	<div class="absolute inset-0 rounded-2xl bg-white/5 opacity-0 group-hover:opacity-100 transition-all duration-300 pointer-events-none"></div>
</div> 