---
import Features from "./Features.astro";
import Hero from "./Hero.astro";
import Team from "./Team.astro";
import Cards from "./Cards.astro";
import Stats from "./Stats.astro";
import GridList from "./GridList.astro";
import Timeline from "./Timeline.astro";
import Highlight from "./Highlight.astro";

interface Block {
	__component: string;
	id: number;
	// biome-ignore lint/suspicious/noExplicitAny: <explanation>
	[key: string]: any;
}

interface BlockRendererProps {
	blocks: Block[];
}
const { blocks } = Astro.props as BlockRendererProps;

// biome-ignore lint/suspicious/noExplicitAny: <explanation>
const componentMap: Record<string, any> = {
	"blocks.hero": Hero,
	"blocks.features": Features,
	"blocks.team": Team,
	"blocks.cards": Cards,
	"blocks.stats": Stats,
	"blocks.grid-list": GridList,
	"blocks.timeline": Timeline,
	"blocks.highlight": Highlight,
};
---

{
  blocks.map((block, index) => {
    const Component = componentMap[block.__component]
    return Component ? <Component {...block} zIndex={blocks.length - index} previousBlockHasNotch={blocks[index - 1]?.hasNotch} /> : null
  })
}
