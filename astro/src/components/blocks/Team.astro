---
import fetchApi from "@lib/strapi";
import TeamMember from "../shared/TeamMember.astro";
import AvegaTitle from "../shared/AvegaTitle.astro";
import JoinCard from "../shared/JoinCard.astro";
import { getImageUrl } from "@lib/imageUtils";
import { configureMarkdown, parseMarkdown } from "@lib/markdown";

interface TeamProps {
	title: string;
	description: string;
  cardImage: {
    url: string;
    alternativeText: string;
  };
  cardTitle: string;
  cardContent: string;
}

interface Member {
	firstName: string;
	lastName: string;
	avatar: {
		url: string;
		alternativeText: string;
	};
	role: string;
  job: string;
}

const members: Member[] = await fetchApi({
	endpoint: "/members?populate=*&sort=lastName:ASC",
	wrappedByKey: "data",
});

const strapiUrl = import.meta.env.STRAPI_URL;

const { title, description, cardImage, cardTitle, cardContent } = Astro.props as TeamProps;

configureMarkdown();

const parsedContent = parseMarkdown(cardContent);

const cardImageUrl = getImageUrl(cardImage?.url, strapiUrl);

---
<section class="text-gray-600 body-font">
  <div class="max-w-screen-xl mx-auto px-8 py-24">
    <div class="mb-20">
      <AvegaTitle title={title} color="#725CFA" level={4} />
      <div class="leading-relaxed text-base mt-5" set:html={description} />
    </div>
    <div class="sm:px-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
      {members?.map((member) => {
        return <TeamMember firstName={member.firstName} lastName={member.lastName} avatar={member.avatar} role={member.role} job={member.job} />;
      })}
      <JoinCard cardImage={cardImageUrl} cardTitle={cardTitle} cardContent={parsedContent} />
    </div>
  </div>
</section>