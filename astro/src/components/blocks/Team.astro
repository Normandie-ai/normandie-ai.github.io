---
import { Image } from "astro:assets";
import fetchApi from "@lib/strapi";
import TeamMember from "../shared/TeamMember.astro";

interface TeamProps {
	title: string;
	description: string;
	backgroundImage: {
		url: string;
		alternativeText: string;
	};
}

interface Member {
	firstName: string;
	lastName: string;
	avatar: {
		url: string;
		alternativeText: string;
	};
}

const members: Member[] = await fetchApi({
	endpoint: "/members?populate=*&sort=lastName:ASC",
	wrappedByKey: "data",
});

const strapiUrl = import.meta.env.STRAPI_URL;

const { title, description, backgroundImage } = Astro.props as TeamProps;

const imageUrl = backgroundImage ? strapiUrl + backgroundImage.url : null;
---
<section class="text-gray-600 body-font">
    {imageUrl && (
      <Image src={imageUrl}
        alt=""
        class="fixed inset-0 w-full h-full object-cover -z-10"
        width="1920"
        height="1080"
      />
    )}
    <div class="container px-5 py-24 mx-auto">
        <div class="flex flex-col text-center w-full mb-20">
          <h1 class="sm:text-3xl text-2xl font-medium title-font mb-4 text-gray-900">{title}</h1>
          <p class="lg:w-2/3 mx-auto leading-relaxed text-base">{description}</p>
        </div>
        <div class="flex flex-wrap -m-2">
          
          {members?.map((member) => {
            return <TeamMember firstName={member.firstName} lastName={member.lastName} avatar={member.avatar} />;
          })}
        </div>
    </div>
</section>